# Generated by Django 3.0.6 on 2020-06-10 22:33

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('site2', '0020_auto_20200610_2015'),
    ]

    operations = [
        migrations.CreateModel(
            name='FormPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('date', models.DateField(verbose_name='Post date')),
                ('intro', models.CharField(max_length=250)),
                ('body', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('two_columns', wagtail.core.blocks.StructBlock([('left_column', wagtail.core.blocks.StreamBlock([('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('htmljs', wagtail.core.blocks.TextBlock()), ('code_bash', wagtail.core.blocks.TextBlock()), ('code_py', wagtail.core.blocks.TextBlock()), ('code_htmljs', wagtail.core.blocks.TextBlock())], icon='arrow-right', label='Left column content')), ('right_column', wagtail.core.blocks.StreamBlock([('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('htmljs', wagtail.core.blocks.TextBlock()), ('code_bash', wagtail.core.blocks.TextBlock()), ('code_py', wagtail.core.blocks.TextBlock()), ('code_htmljs', wagtail.core.blocks.TextBlock())], icon='arrow-right', label='Right column content'))])), ('three_columns', wagtail.core.blocks.StructBlock([('column1', wagtail.core.blocks.StreamBlock([('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('htmljs', wagtail.core.blocks.TextBlock()), ('code_bash', wagtail.core.blocks.TextBlock()), ('code_py', wagtail.core.blocks.TextBlock()), ('code_htmljs', wagtail.core.blocks.TextBlock())], icon='arrow-right', label='Column 1')), ('column2', wagtail.core.blocks.StreamBlock([('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('htmljs', wagtail.core.blocks.TextBlock()), ('code_bash', wagtail.core.blocks.TextBlock()), ('code_py', wagtail.core.blocks.TextBlock()), ('code_htmljs', wagtail.core.blocks.TextBlock())], icon='arrow-right', label='Column 2')), ('column3', wagtail.core.blocks.StreamBlock([('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('htmljs', wagtail.core.blocks.TextBlock()), ('code_bash', wagtail.core.blocks.TextBlock()), ('code_py', wagtail.core.blocks.TextBlock()), ('code_htmljs', wagtail.core.blocks.TextBlock())], icon='arrow-right', label='Column 3'))])), ('image', wagtail.images.blocks.ImageChooserBlock()), ('exe_htmljs', wagtail.core.blocks.TextBlock()), ('code_bash', wagtail.core.blocks.TextBlock()), ('code_py', wagtail.core.blocks.TextBlock()), ('code_htmljs', wagtail.core.blocks.TextBlock())], blank=True, null=True)),
                ('categories', modelcluster.fields.ParentalManyToManyField(blank=True, to='site2.Site2Category')),
                ('tags', modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='site2.Site2Tag', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
